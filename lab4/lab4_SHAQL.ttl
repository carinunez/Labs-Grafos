# LAB 4 SHAQL

# P1
SELECT ?entity
WHERE {
  ?entity rdfs:label "Universidad de Chile"@es.
  SERVICE wikibase:label { bd:serviceParam wikibase:language "es,en". }
}
# Resultados: Q232141 ; Q3569732 ; Q4005840
# UChile : Q232141

# P2
SELECT DISTINCT ?class
WHERE {
  wd:Q232141 wdt:P31 ?class
  SERVICE wikibase:label { bd:serviceParam wikibase:language "es,en". }
}

# Clases encontradas : 
# wd:Q45400320
# wd:Q875538
# wd:Q31855

# P3
# Para fundación usar inception P571

SELECT ?university ?universityLabel
WHERE {
  ?university wdt:P31/wdt:P279* wd:Q3918; # *: busca una universidad en cualquier nivel cualquier 
    wdt:P571 ?year;
    wdt:P17/wdt:P30 wd:Q18. # Que esté en un pais o continente en America del Sur
  # Busco el año de fundación de la UChile
    wd:Q232141 wdt:P571 ?yearUChile 
  FILTER ( # Universidades que se hayan fundado antes
    YEAR(?year) < YEAR(?yearUChile))
  SERVICE wikibase:label { bd:serviceParam wikibase:language "es,en". }
}


# P4 
SELECT ?estudiantesLabel ?U_NoUchileLabel
WHERE {
  # educated at -> P69
  # Busco las personas que estudiaron en la Uchile y en otra U
  ?estudiantes wdt:P31 wd:Q5; # busca personas 

  # Dejo explicito que estudie en la Chile y en otra U para que se cumplan 
  # ambas condiciones
          wdt:P69 wd:Q232141; 
          wdt:P69 ?U_NoUchile. # + cualquier otra u chilena

  ?U_NoUchile wdt:P31/wdt:P279* wd:Q3918; # *: busca una universidad en cualquier nivel 
             wdt:P17 wd:Q298. # Universidades Chilenas

    FILTER(?U_NoUchile != wd:Q232141) 

  SERVICE wikibase:label { bd:serviceParam wikibase:language "es,en". }
}




# P5 POR HACER

SELECT ?ocupacionLabel (COUNT(?estudiantes) AS ?cantidad)
WHERE {
  # educated at -> P69
  # Busco las personas que estudiaron en la Uchile y en otra U
  ?estudiantes wdt:P31 wd:Q5;
          wdt:P69 wd:Q232141.
  # ocupacion -> P106
  ?estudiantes wdt:P106 ?ocupacion.

  SERVICE wikibase:label { bd:serviceParam wikibase:language "es,en". }
}
GROUP BY ?ocupacionLabel 
ORDER BY DESC (?cant)

# P6
SELECT ?persona ?personaLabel ?relacionUchile
WHERE {
  ?persona wdt:P31 wd:Q5;
               wdt:P69|wdt:P108 wd:Q232141.
BIND(
  # Usar () dentro de otro () genera problemas, usar {}
  IF( EXISTS { ?persona wdt:P69 wd:Q232141 }, "Estudiante", 
    IF( EXISTS {?persona wdt:P108 wd:Q232141}, "Trabajador", 
      "Otro")
    ) AS ?relacionUchile
)
    SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],mul,en" }
}


# P7 

SELECT ?persona ?personaLabel ?relacionUchile ?fechaNacimiento ?pais
WHERE {
  ?persona wdt:P31 wd:Q5;
               wdt:P69|wdt:P108 wd:Q232141.
BIND(
  IF( EXISTS { ?persona wdt:P69 wd:Q232141 }, "Estudiante", 
    IF( EXISTS {?persona wdt:P108 wd:Q232141}, "Trabajador", 
      "Otro"
    ) ) AS ?relacionUchile
)
# date of birth P569
# place of birth P19
# Reviso si tiene fecha de nacimiento y también si tiene lugar de nacimiento,
# a partir del lugar de nacimiento extraigo el país de nacimiento
OPTIONAL {?persona wdt:P569 ?fechaNacimiento}
OPTIONAL {?persona wdt:P19 ?lugarNacimiento.
          ?lugarNacimiento wdt:P17 ?pais}
    SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],mul,en" }
}


# P8 POR HACER
# con esto el resultado es sólo el promedio

# SELECT (AVG(?edad) AS ?promEdad)
#   WHERE{ 
  
#   SELECT ?estudiantes ?estudiantesLabel ?edad
#   WHERE {
#     # educated at -> P69
#     # Busco las personas que estudiaron en la Uchile y su fecha de nacimiento
#     ?estudiantes wdt:P31 wd:Q5;
#             wdt:P69 wd:Q232141;
#             wdt:P569 ?fecha_nacimiento.
  
#     # encontrar los que están vivos, i.e no tienen fecha de muerte (P570)
#     MINUS {?estudiantes wdt:P570 ?muerte}
    
#     # quite las personas que nacieron en el 1800s pero no tenían fecha de muerte
#     FILTER (YEAR(?fecha_nacimiento) > 1900) 

#     # calculo la edad de los vivos
#     BIND( YEAR(NOW()) - YEAR(?fecha_nacimiento) AS ?edad)
#     }
#  }

# RESPUESTA FINAL
# Primero calculo la edad promedio (Consulta anidada) y luego aplico la condición 

 SELECT ?estudiantes ?estudiantesLabel ?edad
  WHERE{ 
  # CONSULTA PARA CALCULAR EL PROM DE EDADES
        {SELECT (AVG(?edad) AS ?promEdad)
        WHERE {
          # educated at -> P69
          # Busco las personas que estudiaron en la Uchile y su fecha de nacimiento
          ?estudiantes wdt:P31 wd:Q5;
                  wdt:P69 wd:Q232141;
                  wdt:P569 ?fecha_nacimiento.
        
          # encontrar los que están vivos, i.e no tienen fecha de muerte (P570)
          MINUS {?estudiantes wdt:P570 ?muerte}
          # quite las personas que nacieron en el 1800s pero no tenían fecha de muerte
          FILTER (YEAR(?fecha_nacimiento) > 1900) 
          # busco la edad de los vivos
          BIND( YEAR(NOW()) - YEAR(?fecha_nacimiento) AS ?edad)
          }}

  # CONSULTA PARA LOS RESULTADOS
  # Hago la misma consulta anterior pero ahora para retornar quienes son los estudiantes
  # que cumplen con la condicion
  ?estudiantes wdt:P31 wd:Q5;
            wdt:P69 wd:Q232141;
            wdt:P569 ?fecha_nacimiento.
  
    MINUS {?estudiantes wdt:P570 ?muerte}
    BIND( YEAR(NOW()) - YEAR(?fecha_nacimiento) AS ?edad)
    # Mantuve la condicion de haber nacido después del 1900 y 
    # agrego que tengan edad mayor al promedio
    FILTER ((YEAR(?fecha_nacimiento) > 1900) && ?edad > ?promEdad) 
    SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],mul,en" }
 }
